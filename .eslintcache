[{"C:\\Users\\com\\Desktop\\YH\\type\\src\\App.tsx":"1","C:\\Users\\com\\Desktop\\YH\\type\\src\\hooks\\useInput.tsx":"2","C:\\Users\\com\\Desktop\\YH\\type\\src\\index.tsx":"3","C:\\Users\\com\\Desktop\\YH\\type\\src\\react-app-env.d.ts":"4","C:\\Users\\com\\Desktop\\YH\\type\\src\\components\\TodoForm.tsx":"5","C:\\Users\\com\\Desktop\\YH\\type\\src\\components\\TodoList.tsx":"6","C:\\Users\\com\\Desktop\\YH\\type\\src\\components\\TodoTitle.tsx":"7","C:\\Users\\com\\Desktop\\YH\\type\\src\\pages\\Todo.tsx":"8","C:\\Users\\com\\Desktop\\YH\\type\\src\\reducer\\index.ts":"9","C:\\Users\\com\\Desktop\\YH\\type\\src\\reducer\\todo.ts":"10","C:\\Users\\com\\Desktop\\YH\\type\\src\\store\\store.tsx":"11"},{"size":68,"mtime":1689391086322,"results":"12","hashOfConfig":"13"},{"size":291,"mtime":1689391919333,"results":"14","hashOfConfig":"13"},{"size":626,"mtime":1689391081987,"results":"15","hashOfConfig":"13"},{"size":40,"mtime":1689390786051,"results":"16","hashOfConfig":"13"},{"size":1543,"mtime":1689393016507,"results":"17","hashOfConfig":"13"},{"size":745,"mtime":1689393016541,"results":"18","hashOfConfig":"13"},{"size":870,"mtime":1689393016584,"results":"19","hashOfConfig":"13"},{"size":1075,"mtime":1689393016643,"results":"20","hashOfConfig":"13"},{"size":148,"mtime":1689393016677,"results":"21","hashOfConfig":"13"},{"size":488,"mtime":1689393016702,"results":"22","hashOfConfig":"13"},{"size":1144,"mtime":1689393016794,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12q9m8m",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\com\\Desktop\\YH\\type\\src\\App.tsx",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\hooks\\useInput.tsx",["59"],[],"import { useCallback } from \"react\";\nimport { useState } from \"react\";\nconst useInput = () => {\n  const [value, setvalue] = useState(\"\");\n  const onChange = useCallback((e: any) => {\n    setvalue(e.target.value);\n  }, []);\n\n  return [value, onChange, setvalue];\n};\n\nexport default useInput;\n","C:\\Users\\com\\Desktop\\YH\\type\\src\\index.tsx",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\react-app-env.d.ts",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\components\\TodoForm.tsx",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\components\\TodoList.tsx",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\components\\TodoTitle.tsx",["60"],[],"import styled, { keyframes } from \"styled-components\";\n\nconst TodoTitle = ({ state }) => {\n  return (\n    <>\n      <Title>\n        할 일 목록 리스트{\" \"}\n        <span style={{ color: \"red\", background: \"yellowgreen\" }}>{state.length}</span>개\n      </Title>\n    </>\n  );\n};\n\nexport default TodoTitle;\n\nconst jump = keyframes`\n  from{\n    transform: translateY(0)\n  }\n  to{\n    transform: translateY(-3px)\n  }\n`;\n\nconst Title = styled.div`\n  background-color: yellowgreen;\n  border-radius: 5px;\n  width: 500px;\n  font-size: 32px;\n  padding-left: 20px;\n  position: relative;\n  display: inline-block;\n`;\n\nconst Login = styled.button`\n  display: inline-block;\n  border-radius: 5px;\n  height: 35px;\n  background-color: yellowgreen;\n  color: white;\n  cursor: pointer;\n  :hover {\n    background: rgb(200, 50, 70);\n    animation: ${jump} 0.2s ease-out forwards;\n  }\n`;\n","C:\\Users\\com\\Desktop\\YH\\type\\src\\pages\\Todo.tsx",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\reducer\\index.ts",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\reducer\\todo.ts",[],[],"C:\\Users\\com\\Desktop\\YH\\type\\src\\store\\store.tsx",[],[],{"ruleId":"61","severity":2,"message":"62","line":5,"column":36,"nodeType":"63","messageId":"64","endLine":5,"endColumn":39,"suggestions":"65"},{"ruleId":"66","severity":2,"message":"67","line":35,"column":7,"nodeType":"68","messageId":"69","endLine":35,"endColumn":12},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["70","71"],"@typescript-eslint/no-unused-vars","'Login' is assigned a value but never used.","Identifier","unusedVar",{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},"suggestUnknown",{"range":"78","text":"79"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"80","text":"81"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[173,176],"unknown",[173,176],"never"]